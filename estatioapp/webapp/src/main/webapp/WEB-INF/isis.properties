# 
#  Copyright 2012-2014 Eurocommercial Properties NV
#
#  Licensed under the Apache License, Version 2.0 (the "License"); 
#  you may not use this file except in compliance with the License. 
#  You may obtain a copy of the License at 
#
#     http://www.apache.org/licenses/LICENSE-2.0
#     
#  Unless required by applicable law or agreed to in writing, 
#  software distributed under the License is distributed on an 
#  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, 
#  either express or implied. See the License for the specific
#  language governing permissions and limitations under the License.
#


#################################################################################
#
# specify system components.
#
# The values correspond to the named components in the installer-registry.properties file
# in the org.apache.isis.runtimes.dflt:runtime JAR (in the org.apache.isis.runtimes.dflt.runtime package)
#
# Although all configuration could reside in isis.properties, the recommendation is
# to split out into component specific files:
# 
#    xxx_yyy.properties files
#
# where
#    * xxx is the component type, and
#    * yyy is the component name.
#
# For example, persistor_sql.properties holds configuration information specific to the
#
#
# If the components are changed, also remember to edit pom.xml (further comments can be 
# found in the persistor_xxx.properties files)
#
#################################################################################


#
# configure the persistor (object store) to use
#
# * in-memory   requires no additional configuration, but stores object in-memory.
#               Only suitable for prototyping
# * datanucleus uses JDO DataNucleus to persist objects to relational database.
#               for objectstore-specific properties, see persistor_datanucleus.properties   
# * fileserver  uses a simple FileServer to persist objects as JSON documents.  It requires the fileserver component to be running
#               for objectstore-specific properties, see persistor_fileserver.properties 
# * mongodb     uses MongoDB to be persist objects as JSON documents.  It requires MongoDB to be installed and running
#               for objectstore-specific properties, see persistor_fileserver.properties  
# * sql         uses an RDBMS to persist objects as table rows.  
#               for objectstore-specific properties, see persistor_sql.properties
# * xml         uses the XML ObjectStore to be persist objects to a set of XML files.  Only suitable for prototyping.
#               for objectstore-specific properties, see persistor_xml.properties 
#
# configuring this component automatically refines the metamodel (installing facet factories
# and meta model validators specific to the persistor)
#
# NOTE:
# * if using non-naive implementations of services, edit isis.services (below) and 
#   update the pom.xml to reference appropriate objstore-xxx module
# * for sql and datanucleus objectstores, update the pom.xml to reference appropriate JDBC driver
# 


#isis.persistor=in-memory
isis.persistor=datanucleus
#isis.persistor=fileserver
#isis.persistor=mongodb
#isis.persistor=sql
#isis.persistor=xml


#
# configure authentication mechanism to use (to logon to the system)
# note:
# - authentication is disabled if running in exploration mode
# - the Scimpi viewer allows access to anonymous users
# 
#isis.authentication=file
isis.authentication=org.apache.isis.security.shiro.authentication.ShiroAuthenticationManagerInstaller


#
# configure authorization mechanism to use

# The authorization mechanism define each users' permissions to view/edit object properties 
# or collections, and to view/invoke object actions
#
# configuring this component automatically refines the metamodel (installing a facet factory
# which vetoes access as required)
# 

#isis.authorization=file
#effectively disables
#isis.authorization=bypass
isis.authorization=org.apache.isis.security.shiro.authorization.ShiroAuthorizationManagerInstaller



#
# configure the user profile store to use.
# 
# the user profile store is supported by some viewers as a way to store 
# user-specific settings (eg colours, themes etc)
# 
isis.user-profile-store=in-memory




#
# additional programming model facets
#

#isis.reflector.facets.include=
#isis.reflector.facets.exclude=





#################################################################################
#
# Application Services and fixtures
#
#################################################################################

#
# Specify the domain services.
# 
# These are the most important configuration properties in the system, as they define
# the set of the classes for Isis to instantiate as domain service singletons.
# From these domain service instances the rest of the metamodel is discovered, while the 
# end-user gains access to other domain objects by invoking the actions of the domain services.
#
# The implementations depend on the configured (see isis.persistor above) 
#
isis.services-installer=configuration-and-annotation
isis.services.ServicesInstallerFromAnnotation.packagePrefix=org.estatio,\
                                                            org.isisaddons.module

isis.services = \
                90:org.estatio.api.Api, \
                90:org.estatio.api.ApiItaly, \
                \
                org.apache.isis.applib.services.bookmark.BookmarkHolderActionContributions,\
                \
                # customizable exception handling for JDO objectstore, \
                org.apache.isis.objectstore.jdo.applib.service.exceprecog.ExceptionRecognizerCompositeForJdoObjectStore,\
                \
                # isis-module-command services, \
                org.isisaddons.module.command.dom.CommandServiceJdoContributions,\
                org.isisaddons.module.command.dom.BackgroundCommandServiceJdoContributions,\
                \
                # isis-module-audit-jdo services, \
                org.isisaddons.module.audit.dom.AuditingServiceContributions,\
                \
                # isis-module-publishing-jdo services, \
                org.isisaddons.module.publishing.dom.PublishingServiceContributions,\
                org.isisaddons.module.publishing.dom.eventserializer.RestfulObjectsSpecEventSerializer,\
                \
                # isis-module-security services, \
	            org.isisaddons.module.security.dom.password.PasswordEncryptionServiceUsingJBcrypt,\
	            org.isisaddons.module.security.app.user.MeService,\
	            org.isisaddons.module.security.dom.permission.PermissionsEvaluationServiceAllowBeatsVeto,\
                \
                99:org.isisaddons.wicket.gmap3.cpt.service.LocationLookupService, \
                99:org.isisaddons.module.stringinterpolator.dom.StringInterpolatorService, \
                \
                #99:org.estatio.services.documents.CmisRepository, \
                #99:org.estatio.services.documents.DocumentViewModelFactory, \
                #99:org.estatio.services.documents.DocumentContributions, \
                #,\
                #99:org.estatio.webapp.services.scheduler.SchedulerServiceForEstatio, \
                #


#
# Specify the (optional) test fixtures
#
# Fixtures are used to seed the object store with an initial set of data.  For the 
# in-memory object store, the fixtures are installed on every run.  For other
# object stores, they are used only when the object store is first initialized.
#
isis.fixtures= org.estatio.fixture.EstatioDemoFixture

#
# Publishing settings
#
org.apache.isis.viewer.restfulobjects.rendering.eventserializer.RestfulObjectsSpecEventSerializer.baseUrl=http://localhost:8080/restful/

#
# whether ExceptionRecognizers should also log any recognized exceptions
# (default false; enable for diagnostics/debugging)
#
#isis.services.exceprecog.logRecognizedExceptions=true

isis.services.command.actions=ignoreQueryOnly
#isis.services.command.actions=all
#isis.services.command.actions=none

isis.services.audit.objects=all
#isis.services.audit.objects=none


################################################################################
#
# Viewer defaults
#
#################################################################################

#
# Specify viewer defaults
# 

isis.viewers.paged.standalone=30
isis.viewers.paged.parented=10


#isis.viewers.propertyLayout.labelPosition=LEFT
#isis.viewers.parameterLayout.labelPosition=LEFT

isis.reflector.facet.cssClassFa.patterns=\
                        new.*:fa-plus,\
                        add.*:fa-plus-square,\
                        create.*:fa-plus,\
                        update.*:fa-edit,\
                        change.*:fa-edit,\
                        remove.*:fa-minus-square,\
                        copy.*:fa-copy,\
                        move.*:fa-exchange,\
                        first.*:fa-star,\
                        find.*:fa-search,\
                        lookup.*:fa-search,\
                        clear.*:fa-remove,\
                        previous.*:fa-step-backward,\
                        next.*:fa-step-forward,\
                        list.*:fa-list, \
                        all.*:fa-list, \
                        download.*:fa-download, \
                        upload.*:fa-upload, \
                        execute.*:fa-bolt, \
                        run.*:fa-bolt, \
                        calculate.*:fa-calculator, \
                        verify.*:fa-check-circle, \
                        refresh.*:fa-refresh, \
                        install.*:fa-wrench, \
                        stop.*:fa-stop, \
                        terminate.*:fa-stop, \
                        pause.*:fa-pause, \
                        suspend.*:fa-pause, \
                        approve.*:fa-thumbs-o-up, \
                        decline.*:fa-thumbs-o-down
                        
                        

isis.reflector.facet.cssClass.patterns=\
                        update.*:btn-default,\
                        delete.*:btn-warning,\
                        .*:btn-primary

isis.objects.editing=FALSE

################################################################################
#
# Application-specific
#
#################################################################################

cmisServerDefaultRepoBaseUrl=http://ams-s-nuxeo02.ecp.loc/nuxeo/nxdoc/default

